version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - ${ZOOKEEPER_DATA_DIR}:/var/lib/zookeeper/data 
      - ${ZOOKEEPER_LOG_DIR}:/var/lib/zookeeper/log
  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    ports: 
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ${BROKER_DATA_DIR}:/var/lib/kafka/data
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "broker:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - broker
  redis:
    image: redis
    restart: always
    container_name: coinredis
    ports:
      - '${REDIS_EXPOSED_PORT}:6379'
    volumes:
      - ${REDIS_DATA_DIR}:/var/lib/redis
      # - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  db:
    image: postgres
    restart: always
    container_name: coindb
    ports: 
      - '${POSTGRES_EXPOSED_PORT}:5432'
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - ${POSTGRES_VOLUME_PATH}:/var/lib/postgresql/data