version: "3.8"

services:
  redis:
    image: redis:6.2.1
    restart: unless-stopped
    container_name: coinredis
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_EXPOSED_PORT}:6379"
    volumes:
      - redis-data:/data
      # - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"
  db:
    image: timescale/timescaledb:2.1.0-pg13
    restart: unless-stopped
    container_name: coindb
    ports:
      - "${POSTGRES_EXPOSED_PORT}:5432"
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d/
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"
  mongodb:
    image: mongo:4.4.4
    container_name: coinmongo
    restart: unless-stopped
    command: mongod --auth --config /etc/mongod.conf
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD
      - MONGO_INITDB_DATABASE
    volumes:
      - ./mongodb/001_init-mongo.sh:/docker-entrypoint-initdb.d/001_init-mongo.sh
      - ./mongodb/mongod.conf:/etc/mongod.conf
      - mongo-data:/data/db
    ports:
      - "${MONGO_EXPOSED_PORT}:27017"
  normalizer:
    container_name: normalizer
    restart: unless-stopped
    build:
      context: normalizer
      dockerfile: Dockerfile
    environment:
      - NODE_ENV
      - REDIS_URI=redis://redis:6379
      - POSTGRES_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - MONGO_URI=mongodb://${MONGO_INITDB_USERNAME}:${MONGO_INITDB_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
      - SLACK_INCOMING_WEBHOOK
    depends_on:
      - redis
      - db
    command: bash -c "cd /usr/src/app && npm install && npm run start"
    volumes:
      - ./normalizer:/usr/src/app
      - /usr/src/app/node_modules
      - normalizer_logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"
  scraper-cookies:
    container_name: scraper-cookies
    restart: unless-stopped
    build:
      context: scraper-cookies
      dockerfile: Dockerfile
    environment:
      - NODE_ENV
      - REDIS_URI=redis://redis:6379
      - PROXY_URI
      - COOKIE_STOCK_SIZE
      - AXIOS_TIMEOUT
      - MAX_CONCURRENCY
    depends_on:
      - redis
    command: bash -c "cd /usr/src/app && npm install && npm run start"
    volumes:
      - ./scraper-cookies:/usr/src/app
      - /usr/src/app/node_modules
      - scraper_cookies_logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"
  scraper-comparer:
    container_name: scraper-comparer
    restart: unless-stopped
    build:
      context: scraper-comparer
      dockerfile: Dockerfile
    environment:
      - NODE_ENV
      - REDIS_URI=redis://redis:6379
      - PROXY_URI
      - ACTIVE_SECONDS_PER_MIN
      - COOKIE_STOCK_SIZE
      - AXIOS_TIMEOUT
      - MAX_CONCURRENCY
      - NORMALIZER_API_BASE_URI=http://normalizer:3000
    depends_on:
      - redis
      - normalizer
    command: bash -c "cd /usr/src/app && npm install && npm run start"
    volumes:
      - ./scraper-comparer:/usr/src/app
      - /usr/src/app/node_modules
      - scraper_comparer_logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"
  scraper-weekly:
    container_name: scraper-weekly
    restart: unless-stopped
    build:
      context: scraper-weekly
      dockerfile: Dockerfile
    environment:
      - NODE_ENV
      - REDIS_URI=redis://redis:6379
      - PROXY_URI
      - ACTIVE_SECONDS_PER_MIN
      - COOKIE_STOCK_SIZE
      - AXIOS_TIMEOUT
      - MAX_CONCURRENCY
      - NORMALIZER_API_BASE_URI=http://normalizer:3000
    depends_on:
      - redis
      - normalizer
    command: bash -c "cd /usr/src/app && npm install && npm run start"
    volumes:
      - ./scraper-weekly:/usr/src/app
      - /usr/src/app/node_modules
      - scraper_weekly_logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"
  scraper:
    container_name: scraper
    restart: unless-stopped
    build:
      context: scraper
      dockerfile: Dockerfile
    environment:
      - NODE_ENV
      - REDIS_URI=redis://redis:6379
      - PROXY_URI
      - ACTIVE_SECONDS_PER_MIN
      - COOKIE_STOCK_SIZE
      - AXIOS_TIMEOUT
      - MAX_CONCURRENCY
      - NORMALIZER_API_BASE_URI=http://normalizer:3000
    depends_on:
      - redis
      - normalizer
    command: bash -c "cd /usr/src/app && npm install && npm run start"
    volumes:
      - ./scraper:/usr/src/app
      - /usr/src/app/node_modules
      - scraper_logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "10"

volumes:
  db-data:
  mongo-data:
  redis-data:
  scraper_logs:
  scraper_cookies_logs:
  scraper_weekly_logs:
  scraper_comparer_logs:
  normalizer_logs:
